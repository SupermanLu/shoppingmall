<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shoppingmall.dao.RoleMapper">
	<resultMap id="BaseResultMap"
		type="com.shoppingmall.model.Role">
		<id column="roleid" jdbcType="VARCHAR" property="roleid" />
		<result column="rolename" jdbcType="VARCHAR"
			property="rolename" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="status" jdbcType="VARCHAR" property="status" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.shoppingmall.model.Role">
		<result column="menuid" jdbcType="LONGVARCHAR"
			property="menuid" />
	</resultMap>
	<sql id="Base_Column_List">
		roleid, rolename, description, status
	</sql>
	<sql id="Blob_Column_List">
		menuid
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from role
		where roleid = #{roleid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from role
		where roleid = #{roleid,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.shoppingmall.model.Role">
		insert into role (roleid, rolename, description,
		status, menuid)
		values (#{roleid,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR}, #{menuid,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.shoppingmall.model.Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				roleid,
			</if>
			<if test="rolename != null">
				rolename,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="menuid != null">
				menuid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				#{roleid,jdbcType=VARCHAR},
			</if>
			<if test="rolename != null">
				#{rolename,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="menuid != null">
				#{menuid,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.shoppingmall.model.Role">
		update role
		<set>
			<if test="rolename != null">
				rolename = #{rolename,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="menuid != null">
				menuid = #{menuid,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where roleid = #{roleid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="com.shoppingmall.model.Role">
		update role
		set rolename = #{rolename,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR},
		menuid = #{menuid,jdbcType=LONGVARCHAR}
		where roleid = #{roleid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.shoppingmall.model.Role">
		update role
		set rolename = #{rolename,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR}
		where roleid = #{roleid,jdbcType=VARCHAR}
	</update>
	


	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from role 
        where status='1'
	</select>



	<select id="selectList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from role
		where
		rolename like binary '%${search}%' or description like binary '%${search}%'
		limit
		#{limit,jdbcType=INTEGER} offset #{offset,jdbcType=INTEGER}
	</select>
	<select id="selectCount" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from role
		where
		rolename like binary '%${search}%' or description like binary '%${search}%'
	</select>


	<delete id="deleteAll">
		delete from role
	</delete>
</mapper>