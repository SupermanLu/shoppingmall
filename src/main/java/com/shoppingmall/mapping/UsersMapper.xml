<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shoppingmall.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.shoppingmall.model.Users">
    <id column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="roleid" jdbcType="VARCHAR" property="roleid" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Base_Column_List">
    userid, username, roleid, status, password, name
  </sql>
  <sql id="Base_Column_List1">
    a.userid, a.username, a.roleid, a.status, a.password, a.name,b.rolename
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where userid = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from users
    where userid = #{userid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.shoppingmall.model.Users">
    insert into users (userid, username, roleid, 
      status, password, name
      )
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{roleid,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shoppingmall.model.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="roleid != null">
        roleid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shoppingmall.model.Users">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null">
        roleid = #{roleid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shoppingmall.model.Users">
    update users
    set username = #{username,jdbcType=VARCHAR},
      roleid = #{roleid,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  
  <select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from users
	</select>
	
	<select id="selectByUserName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from users
		where username= #{username,jdbcType=VARCHAR}
	</select>

	<select id="selectList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List1" />
		from users a left join role b on a.roleid=b.roleid
		where a.username like binary '%${search}%'
		limit #{limit,jdbcType=INTEGER} offset #{offset,jdbcType=INTEGER}
	</select>
	<select id="selectCount" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List1" />
		from users a left join role b on a.roleid=b.roleid
		where a.username like binary '%${search}%'
	</select>
	
	<delete id="deleteAll">
		delete from users
	</delete>
</mapper>